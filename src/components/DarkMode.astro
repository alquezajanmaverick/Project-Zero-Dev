---
---

<button
  class="theme-toggle -mt-2 z-[200]"
  id="theme-toggle"
  title="Toggles light & dark"
  aria-label="auto"
  aria-live="polite"
>
  <svg class="sun-and-moon w-12" aria-hidden="true" viewBox="0 0 24 24">
    <mask class="moon" id="moon-mask">
      <rect x="0" y="0" width="100%" height="100%" fill="white"></rect>
      <circle cx="24" cy="10" r="6" fill="black"></circle>
    </mask>
    <circle
      class="sun !fill-yellow-200"
      cx="12"
      cy="12"
      r="6"
      mask="url(#moon-mask)"
      fill="currentColor"></circle>
    <g class="sun-beams" stroke="currentColor" class="stroke-yellow-300">
      <line x1="12" y1="1" x2="12" y2="3" class="stroke-amber-300"></line>
      <line x1="12" y1="21" x2="12" y2="23" class="stroke-amber-300"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64" class="stroke-amber-300"
      ></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78" class="stroke-amber-300"
      ></line>
      <line x1="1" y1="12" x2="3" y2="12" class="stroke-amber-300"></line>
      <line x1="21" y1="12" x2="23" y2="12" class="stroke-amber-300"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36" class="stroke-amber-300"
      ></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22" class="stroke-amber-300"
      ></line>
    </g>
  </svg>
</button>

<script>
  const storageKey = "theme-preference";

  const onClick = () => {
    // flip current value
    theme.value = theme.value === "light" ? "dark" : "light";

    setPreference();
  };

  const getColorPreference = () => {
    if (localStorage.getItem(storageKey))
      return localStorage.getItem(storageKey);
    else
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
  };

  const setPreference = () => {
    localStorage.setItem(storageKey, theme.value);
    reflectPreference();
  };

  const reflectPreference = () => {
    document.firstElementChild.setAttribute("data-theme", theme.value);
    if (theme.value == "dark") {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    // document.documentElement.classList.add('dark')
    document
      .querySelector("#theme-toggle")
      ?.setAttribute("aria-label", theme.value);
  };

  const theme = {
    value: getColorPreference(),
  };

  // set early so no page flashes / CSS is made aware
  reflectPreference();

  window.onload = () => {
    // set on load so screen readers can see latest value on the button
    reflectPreference();

    // now this script can find and listen for clicks on the control
    document.querySelector("#theme-toggle").addEventListener("click", onClick);
  };

  // sync with system changes
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", ({ matches: isDark }) => {
      theme.value = isDark ? "dark" : "light";
      setPreference();
    });
</script>
